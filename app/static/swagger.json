{
    "swagger": "2.0",
    "info": {
      "title": "Finance Tracker API",
      "description": "RESTful API for tracking personal finances",
      "version": "1.0.0"
    },
    "basePath": "/api",
    "schemes": [
      "http"
    ],
    "securityDefinitions": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "paths": {
      "/auth/register": {
        "post": {
          "summary": "Register a new user",
          "tags": ["Authentication"],
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["username", "email", "password"]
              }
            }
          ],
          "responses": {
            "201": {
              "description": "User created successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "409": {
              "description": "Username or email already exists"
            }
          }
        }
      },
      "/auth/login": {
        "post": {
          "summary": "Login and get access token",
          "tags": ["Authentication"],
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["username", "password"]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Login successful"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Invalid credentials"
            }
          }
        }
      },
      "/auth/refresh": {
        "post": {
          "summary": "Refresh access token",
          "tags": ["Authentication"],
          "security": [{"Bearer": []}],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "Token refreshed successfully"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/auth/profile": {
        "get": {
          "summary": "Get user profile",
          "tags": ["Authentication"],
          "security": [{"Bearer": []}],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "User profile"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/categories": {
        "get": {
          "summary": "Get all categories",
          "tags": ["Categories"],
          "security": [{"Bearer": []}],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "List of categories"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        },
        "post": {
          "summary": "Create a new category",
          "tags": ["Categories"],
          "security": [{"Bearer": []}],
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  }
                },
                "required": ["name"]
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Category created successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/categories/{id}": {
        "get": {
          "summary": "Get a specific category",
          "tags": ["Categories"],
          "security": [{"Bearer": []}],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "integer",
              "description": "Category ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Category details"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Category not found"
            }
          }
        },
        "put": {
          "summary": "Update a category",
          "tags": ["Categories"],
          "security": [{"Bearer": []}],
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "integer",
              "description": "Category ID"
            },
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Category updated successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Category not found"
            }
          }
        },
        "delete": {
          "summary": "Delete a category",
          "tags": ["Categories"],
          "security": [{"Bearer": []}],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "integer",
              "description": "Category ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Category deleted successfully"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Category not found"
            }
          }
        }
      },
      "/transactions": {
        "get": {
          "summary": "Get all transactions",
          "tags": ["Transactions"],
          "security": [{"Bearer": []}],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "query",
              "name": "category_id",
              "type": "integer",
              "description": "Filter by category ID"
            },
            {
              "in": "query",
              "name": "type",
              "type": "string",
              "description": "Filter by transaction type (income or expense)"
            },
            {
              "in": "query",
              "name": "start_date",
              "type": "string",
              "description": "Filter by start date (YYYY-MM-DD)"
            },
            {
              "in": "query",
              "name": "end_date",
              "type": "string",
              "description": "Filter by end date (YYYY-MM-DD)"
            }
          ],
          "responses": {
            "200": {
              "description": "List of transactions"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        },
        "post": {
          "summary": "Create a new transaction",
          "tags": ["Transactions"],
          "security": [{"Bearer": []}],
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "description": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["income", "expense"]
                  },
                  "category_id": {
                    "type": "integer"
                  }
                },
                "required": ["amount", "type", "category_id"]
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Transaction created successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Category not found"
            }
          }
        }
      },
      "/transactions/{id}": {
        "get": {
          "summary": "Get a specific transaction",
          "tags": ["Transactions"],
          "security": [{"Bearer": []}],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "integer",
              "description": "Transaction ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Transaction details"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Transaction not found"
            }
          }
        },
        "put": {
          "summary": "Update a transaction",
          "tags": ["Transactions"],
          "security": [{"Bearer": []}],
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "integer",
              "description": "Transaction ID"
            },
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "description": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["income", "expense"]
                  },
                  "category_id": {
                    "type": "integer"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Transaction updated successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Transaction or category not found"
            }
          }
        },
        "delete": {
          "summary": "Delete a transaction",
          "tags": ["Transactions"],
          "security": [{"Bearer": []}],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "integer",
              "description": "Transaction ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Transaction deleted successfully"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Transaction not found"
            }
          }
        }
      },
      "/transactions/summary": {
        "get": {
          "summary": "Get transaction summary",
          "tags": ["Transactions"],
          "security": [{"Bearer": []}],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "query",
              "name": "start_date",
              "type": "string",
              "description": "Start date for summary (YYYY-MM-DD)"
            },
            {
              "in": "query",
              "name": "end_date",
              "type": "string",
              "description": "End date for summary (YYYY-MM-DD)"
            }
          ],
          "responses": {
            "200": {
              "description": "Transaction summary"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/budgets": {
        "get": {
          "summary": "Get all budgets",
          "tags": ["Budgets"],
          "security": [{"Bearer": []}],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "query",
              "name": "active_only",
              "type": "boolean",
              "description": "Filter active budgets only"
            },
            {
              "in": "query",
              "name": "category_id",
              "type": "integer",
              "description": "Filter by category ID"
            }
          ],
          "responses": {
            "200": {
              "description": "List of budgets"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        },
        "post": {
          "summary": "Create a new budget",
          "tags": ["Budgets"],
          "security": [{"Bearer": []}],
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "start_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "end_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "category_id": {
                    "type": "integer"
                  }
                },
                "required": ["amount", "start_date", "end_date", "category_id"]
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Budget created successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Category not found"
            }
          }
        }
      },
      "/budgets/{id}": {
        "get": {
          "summary": "Get a specific budget",
          "tags": ["Budgets"],
          "security": [{"Bearer": []}],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "integer",
              "description": "Budget ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Budget details"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Budget not found"
            }
          }
        },
        "put": {
          "summary": "Update a budget",
          "tags": ["Budgets"],
          "security": [{"Bearer": []}],
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "integer",
              "description": "Budget ID"
            },
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "start_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "end_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "category_id": {
                    "type": "integer"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Budget updated successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Budget or category not found"
            }
          }
        },
        "delete": {
          "summary": "Delete a budget",
          "tags": ["Budgets"],
          "security": [{"Bearer": []}],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "integer",
              "description": "Budget ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Budget deleted successfully"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Budget not found"
            }
          }
        }
      },
      "/users/me": {
        "get": {
          "summary": "Get current user profile",
          "tags": ["Users"],
          "security": [{"Bearer": []}],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "User profile"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "put": {
          "summary": "Update current user profile",
          "tags": ["Users"],
          "security": [{"Bearer": []}],
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Profile updated successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "User not found"
            },
            "409": {
              "description": "Username or email already exists"
            }
          }
        }
      },
      "/users/me/change-password": {
        "post": {
          "summary": "Change password",
          "tags": ["Users"],
          "security": [{"Bearer": []}],
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "current_password": {
                    "type": "string"
                  },
                  "new_password": {
                    "type": "string"
                  }
                },
                "required": ["current_password", "new_password"]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Password changed successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Current password is incorrect"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/health": {
        "get": {
          "summary": "Health check endpoint",
          "tags": ["System"],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "API is healthy"
            }
          }
        }
      }
    }
  }